name: dockercompose3713164388299852921
services:
  rabbitmq:
    container_name: rabbitmq
    hostname: my-rabbit-server
    image: rabbitmq:3-management
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
  sale:
    build:
      context: C:\Users\Ashley\source\repos\StockSale
      dockerfile: Sale/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
        required: true
      sql_container:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      ConnectionStrings__DefaultConnection: Server=sql_container,1433;Database=SalesDB;User Id=sa;Password=Your_password123;TrustServerCertificate=True;
      RabbitMQ__HostName: rabbitmq
    image: sale_image
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 80
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "5001"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  sql_container:
    container_name: sql_container
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Your_password123
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: volume
        source: sql_data
        target: /var/opt/mssql
        volume: {}
  stock:
    build:
      context: C:\Users\Ashley\source\repos\StockSale
      dockerfile: StockSale/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_started
        required: true
      sql_container:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      ConnectionStrings__DefaultConnection: Server=sql_container,1433;Database=StockDB;User Id=sa;Password=Your_password123;TrustServerCertificate=True;
      RabbitMQ__HostName: rabbitmq
    image: stock_image
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 80
        published: "5002"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "5003"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  mynetwork:
    name: dockercompose3713164388299852921_mynetwork
    driver: bridge
volumes:
  sql_data:
    name: dockercompose3713164388299852921_sql_data