name: dockercompose3713164388299852921
services:
  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3-management
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
  sale:
    build:
      context: C:\Users\Ashley\source\repos\StockSale
      dockerfile: Sale/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Sale
    container_name: Sale
    depends_on:
      rabbitmq:
        condition: service_started
        required: true
      sql_container:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      ConnectionStrings__DefaultConnection: Server=sql_container,1433;Database=SalesDB;User Id=sa;Password=Your_password123;TrustServerCertificate=True;
      RabbitMQ__HostName: rabbitmq
    image: sale_image
    labels:
      com.microsoft.visual-studio.project-name: Sale
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/Sale.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 80
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "5001"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net7.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  sql_container:
    container_name: sql_container
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Your_password123
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\Ashley\Desktop\SQL_Volumes\data
        target: /var/opt/mssql/data
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\Desktop\SQL_Volumes\log
        target: /var/opt/mssql/log
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\Desktop\SQL_Volumes\secrets
        target: /var/opt/mssql/secrets
        bind:
          create_host_path: true
  stock:
    build:
      context: C:\Users\Ashley\source\repos\StockSale
      dockerfile: StockSale/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Stock
    container_name: Stock
    depends_on:
      rabbitmq:
        condition: service_started
        required: true
      sql_container:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      ConnectionStrings__DefaultConnection: Server=sql_container,1433;Database=StockDB;User Id=sa;Password=Your_password123;TrustServerCertificate=True;
      RabbitMQ__HostName: rabbitmq
    image: stock_image
    labels:
      com.microsoft.visual-studio.project-name: Stock
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/Stock.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      mynetwork: null
    ports:
      - mode: ingress
        target: 80
        published: "5002"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "5003"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Ashley\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net7.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
networks:
  mynetwork:
    name: dockercompose3713164388299852921_mynetwork
    driver: bridge